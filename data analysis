{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8cf07efb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>EV</th>\n",
       "      <th>Public_EV_Chargers</th>\n",
       "      <th>Cycling_Routes_km</th>\n",
       "      <th>Public_Bike_Companies</th>\n",
       "      <th>Bus_Fare</th>\n",
       "      <th>Airports</th>\n",
       "      <th>Electric_Buses</th>\n",
       "      <th>Overall_Score</th>\n",
       "      <th>Air_Pollution</th>\n",
       "      <th>Density</th>\n",
       "      <th>Area_km2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>London</td>\n",
       "      <td>80000</td>\n",
       "      <td>11557</td>\n",
       "      <td>97</td>\n",
       "      <td>3</td>\n",
       "      <td>2.08</td>\n",
       "      <td>6</td>\n",
       "      <td>1397</td>\n",
       "      <td>5.87</td>\n",
       "      <td>8.4</td>\n",
       "      <td>5690</td>\n",
       "      <td>1572.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Amsterdam</td>\n",
       "      <td>15000</td>\n",
       "      <td>13549</td>\n",
       "      <td>858</td>\n",
       "      <td>5</td>\n",
       "      <td>3.40</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>5.71</td>\n",
       "      <td>9.1</td>\n",
       "      <td>5621</td>\n",
       "      <td>219.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Vienna</td>\n",
       "      <td>18000</td>\n",
       "      <td>1374</td>\n",
       "      <td>1300</td>\n",
       "      <td>6</td>\n",
       "      <td>2.40</td>\n",
       "      <td>1</td>\n",
       "      <td>150</td>\n",
       "      <td>5.70</td>\n",
       "      <td>9.1</td>\n",
       "      <td>4556</td>\n",
       "      <td>414.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Berlin</td>\n",
       "      <td>30000</td>\n",
       "      <td>3838</td>\n",
       "      <td>1000</td>\n",
       "      <td>6</td>\n",
       "      <td>3.20</td>\n",
       "      <td>1</td>\n",
       "      <td>230</td>\n",
       "      <td>5.52</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4090</td>\n",
       "      <td>891.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Helsinki</td>\n",
       "      <td>25100</td>\n",
       "      <td>146</td>\n",
       "      <td>1300</td>\n",
       "      <td>3</td>\n",
       "      <td>2.95</td>\n",
       "      <td>1</td>\n",
       "      <td>428</td>\n",
       "      <td>5.36</td>\n",
       "      <td>4.9</td>\n",
       "      <td>3113</td>\n",
       "      <td>213.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Paris</td>\n",
       "      <td>20000</td>\n",
       "      <td>1043</td>\n",
       "      <td>1000</td>\n",
       "      <td>6</td>\n",
       "      <td>2.50</td>\n",
       "      <td>3</td>\n",
       "      <td>500</td>\n",
       "      <td>5.25</td>\n",
       "      <td>10.3</td>\n",
       "      <td>20909</td>\n",
       "      <td>105.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Oslo</td>\n",
       "      <td>95466</td>\n",
       "      <td>535</td>\n",
       "      <td>327</td>\n",
       "      <td>4</td>\n",
       "      <td>3.24</td>\n",
       "      <td>1</td>\n",
       "      <td>183</td>\n",
       "      <td>5.20</td>\n",
       "      <td>6.2</td>\n",
       "      <td>1699</td>\n",
       "      <td>454.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>100</td>\n",
       "      <td>28</td>\n",
       "      <td>350</td>\n",
       "      <td>5</td>\n",
       "      <td>1.30</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>4.97</td>\n",
       "      <td>5.5</td>\n",
       "      <td>176</td>\n",
       "      <td>468.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Brussels</td>\n",
       "      <td>14000</td>\n",
       "      <td>620</td>\n",
       "      <td>650</td>\n",
       "      <td>7</td>\n",
       "      <td>2.40</td>\n",
       "      <td>2</td>\n",
       "      <td>75</td>\n",
       "      <td>4.93</td>\n",
       "      <td>9.8</td>\n",
       "      <td>7465</td>\n",
       "      <td>32.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Luxembourg</td>\n",
       "      <td>10000</td>\n",
       "      <td>527</td>\n",
       "      <td>78</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4.61</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2600</td>\n",
       "      <td>51.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Dublin</td>\n",
       "      <td>20000</td>\n",
       "      <td>141</td>\n",
       "      <td>190</td>\n",
       "      <td>4</td>\n",
       "      <td>1.70</td>\n",
       "      <td>1</td>\n",
       "      <td>100</td>\n",
       "      <td>4.60</td>\n",
       "      <td>6.3</td>\n",
       "      <td>4708</td>\n",
       "      <td>115.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Madrid</td>\n",
       "      <td>30000</td>\n",
       "      <td>1776</td>\n",
       "      <td>300</td>\n",
       "      <td>1</td>\n",
       "      <td>1.50</td>\n",
       "      <td>1</td>\n",
       "      <td>150</td>\n",
       "      <td>4.36</td>\n",
       "      <td>9.0</td>\n",
       "      <td>5390</td>\n",
       "      <td>604.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Rome</td>\n",
       "      <td>10000</td>\n",
       "      <td>842</td>\n",
       "      <td>320</td>\n",
       "      <td>3</td>\n",
       "      <td>1.50</td>\n",
       "      <td>2</td>\n",
       "      <td>400</td>\n",
       "      <td>4.26</td>\n",
       "      <td>13.1</td>\n",
       "      <td>2137</td>\n",
       "      <td>1285.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Sofia</td>\n",
       "      <td>3000</td>\n",
       "      <td>64</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1</td>\n",
       "      <td>50</td>\n",
       "      <td>4.18</td>\n",
       "      <td>12.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>500.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Budapest</td>\n",
       "      <td>10000</td>\n",
       "      <td>669</td>\n",
       "      <td>200</td>\n",
       "      <td>2</td>\n",
       "      <td>0.90</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>4.12</td>\n",
       "      <td>11.7</td>\n",
       "      <td>3337</td>\n",
       "      <td>525.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Copenhagen</td>\n",
       "      <td>10000</td>\n",
       "      <td>838</td>\n",
       "      <td>400</td>\n",
       "      <td>4</td>\n",
       "      <td>3.22</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>4.09</td>\n",
       "      <td>7.9</td>\n",
       "      <td>4417</td>\n",
       "      <td>179.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Tirana</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>50</td>\n",
       "      <td>4</td>\n",
       "      <td>0.40</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>4.09</td>\n",
       "      <td>16.7</td>\n",
       "      <td>538</td>\n",
       "      <td>41.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Zagreb</td>\n",
       "      <td>2000</td>\n",
       "      <td>203</td>\n",
       "      <td>220</td>\n",
       "      <td>2</td>\n",
       "      <td>0.93</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>3.83</td>\n",
       "      <td>14.9</td>\n",
       "      <td>1200</td>\n",
       "      <td>641.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Athens</td>\n",
       "      <td>2500</td>\n",
       "      <td>63</td>\n",
       "      <td>50</td>\n",
       "      <td>3</td>\n",
       "      <td>1.40</td>\n",
       "      <td>1</td>\n",
       "      <td>250</td>\n",
       "      <td>3.80</td>\n",
       "      <td>16.7</td>\n",
       "      <td>19135</td>\n",
       "      <td>38.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Vilnius</td>\n",
       "      <td>2000</td>\n",
       "      <td>31</td>\n",
       "      <td>120</td>\n",
       "      <td>1</td>\n",
       "      <td>0.90</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>3.76</td>\n",
       "      <td>10.6</td>\n",
       "      <td>1515</td>\n",
       "      <td>401.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Nicosia</td>\n",
       "      <td>500</td>\n",
       "      <td>23</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>1.50</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>3.64</td>\n",
       "      <td>14.1</td>\n",
       "      <td>1700</td>\n",
       "      <td>111.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Vaduz</td>\n",
       "      <td>300</td>\n",
       "      <td>17</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>3.19</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>3.28</td>\n",
       "      <td>7.2</td>\n",
       "      <td>330</td>\n",
       "      <td>17.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Skopje</td>\n",
       "      <td>500</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0.60</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>3.07</td>\n",
       "      <td>24.6</td>\n",
       "      <td>950</td>\n",
       "      <td>1854.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Sarajevo</td>\n",
       "      <td>100</td>\n",
       "      <td>31</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0.80</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>2.80</td>\n",
       "      <td>28.6</td>\n",
       "      <td>2470</td>\n",
       "      <td>142.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          City     EV  Public_EV_Chargers  Cycling_Routes_km  \\\n",
       "0       London  80000               11557                 97   \n",
       "1    Amsterdam  15000               13549                858   \n",
       "2       Vienna  18000                1374               1300   \n",
       "3       Berlin  30000                3838               1000   \n",
       "4     Helsinki  25100                 146               1300   \n",
       "5        Paris  20000                1043               1000   \n",
       "6         Oslo  95466                 535                327   \n",
       "7      Andorra    100                  28                350   \n",
       "8     Brussels  14000                 620                650   \n",
       "9   Luxembourg  10000                 527                 78   \n",
       "10      Dublin  20000                 141                190   \n",
       "11      Madrid  30000                1776                300   \n",
       "12        Rome  10000                 842                320   \n",
       "13       Sofia   3000                  64                 70   \n",
       "14    Budapest  10000                 669                200   \n",
       "15  Copenhagen  10000                 838                400   \n",
       "16      Tirana    100                   5                 50   \n",
       "17      Zagreb   2000                 203                220   \n",
       "18      Athens   2500                  63                 50   \n",
       "19     Vilnius   2000                  31                120   \n",
       "20     Nicosia    500                  23                 20   \n",
       "21       Vaduz    300                  17                 90   \n",
       "22      Skopje    500                  14                 20   \n",
       "23    Sarajevo    100                  31                 15   \n",
       "\n",
       "    Public_Bike_Companies  Bus_Fare  Airports  Electric_Buses  Overall_Score  \\\n",
       "0                       3      2.08         6            1397           5.87   \n",
       "1                       5      3.40         1              75           5.71   \n",
       "2                       6      2.40         1             150           5.70   \n",
       "3                       6      3.20         1             230           5.52   \n",
       "4                       3      2.95         1             428           5.36   \n",
       "5                       6      2.50         3             500           5.25   \n",
       "6                       4      3.24         1             183           5.20   \n",
       "7                       5      1.30         0              10           4.97   \n",
       "8                       7      2.40         2              75           4.93   \n",
       "9                       3      0.00         1              30           4.61   \n",
       "10                      4      1.70         1             100           4.60   \n",
       "11                      1      1.50         1             150           4.36   \n",
       "12                      3      1.50         2             400           4.26   \n",
       "13                      3      0.50         1              50           4.18   \n",
       "14                      2      0.90         1              40           4.12   \n",
       "15                      4      3.22         1              40           4.09   \n",
       "16                      4      0.40         1              10           4.09   \n",
       "17                      2      0.93         1              30           3.83   \n",
       "18                      3      1.40         1             250           3.80   \n",
       "19                      1      0.90         1              30           3.76   \n",
       "20                      2      1.50         0              10           3.64   \n",
       "21                      1      3.19         0               5           3.28   \n",
       "22                      1      0.60         1              10           3.07   \n",
       "23                      1      0.80         1              10           2.80   \n",
       "\n",
       "    Air_Pollution  Density  Area_km2  \n",
       "0             8.4     5690   1572.00  \n",
       "1             9.1     5621    219.30  \n",
       "2             9.1     4556    414.60  \n",
       "3            10.5     4090    891.80  \n",
       "4             4.9     3113    213.80  \n",
       "5            10.3    20909    105.40  \n",
       "6             6.2     1699    454.00  \n",
       "7             5.5      176    468.00  \n",
       "8             9.8     7465     32.61  \n",
       "9             8.8     2600     51.73  \n",
       "10            6.3     4708    115.00  \n",
       "11            9.0     5390    604.30  \n",
       "12           13.1     2137   1285.00  \n",
       "13           12.0     1100    500.00  \n",
       "14           11.7     3337    525.20  \n",
       "15            7.9     4417    179.80  \n",
       "16           16.7      538     41.80  \n",
       "17           14.9     1200    641.00  \n",
       "18           16.7    19135     38.96  \n",
       "19           10.6     1515    401.00  \n",
       "20           14.1     1700    111.00  \n",
       "21            7.2      330     17.30  \n",
       "22           24.6      950   1854.00  \n",
       "23           28.6     2470    142.00  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "data = {\n",
    "    \"City\": [\"London\",\"Amsterdam\",\"Vienna\",\"Berlin\",\"Helsinki\",\n",
    "             \"Paris\",\"Oslo\",\"Andorra\",\"Brussels\",\"Luxembourg\",\n",
    "             \"Dublin\",\"Madrid\",\"Rome\",\"Sofia\",\"Budapest\",\n",
    "             \"Copenhagen\",\"Tirana\",\"Zagreb\",\"Athens\",\"Vilnius\",\n",
    "             \"Nicosia\",\"Vaduz\",\"Skopje\",\"Sarajevo\"],\n",
    "    \"EV\": [80000,15000,18000,30000,25100,20000,95466,100,14000,10000,\n",
    "           20000,30000,10000,3000,10000,10000,100,2000,2500,2000,500,300,500,100],\n",
    "    \"Public_EV_Chargers\": [11557,13549,1374,3838,146,1043,535,28,620,527,\n",
    "                           141,1776,842,64,669,838,5,203,63,31,23,17,14,31],\n",
    "    \"Cycling_Routes_km\":[97,858,1300,1000,1300,1000,327,350,650,78,\n",
    "                          190,300,320,70,200,400,50,220,50,120,20,90,20,15],\n",
    "    \"Public_Bike_Companies\":[3,5,6,6,3,6,4,5,7,3,4,1,3,3,2,4,4,2,3,1,2,1,1,1],\n",
    "    \"Bus_Fare\":[2.08,3.40,2.40,3.20,2.95,2.50,3.24,1.30,2.40,0.00,\n",
    "                1.70,1.50,1.50,0.50,0.90,3.22,0.40,0.93,1.40,0.90,1.50,3.19,0.60,0.80],\n",
    "    \"Airports\":[6,1,1,1,1,3,1,0,2,1,1,1,2,1,1,1,1,1,1,1,0,0,1,1],\n",
    "    \"Electric_Buses\":[1397,75,150,230,428,500,183,10,75,30,100,150,400,50,\n",
    "                       40,40,10,30,250,30,10,5,10,10],\n",
    "    \"Overall_Score\":[5.87,5.71,5.70,5.52,5.36,5.25,5.20,4.97,4.93,4.61,\n",
    "                     4.60,4.36,4.26,4.18,4.12,4.09,4.09,3.83,3.80,3.76,3.64,3.28,3.07,2.80],\n",
    "    \"Air_Pollution\":[8.40,9.10,9.10,10.50,4.90,10.30,6.20,5.50,9.80,8.80,\n",
    "                     6.30,9.00,13.10,12.00,11.70,7.90,16.70,14.90,16.70,10.60,14.10,7.20,24.60,28.60],\n",
    "    \"Density\": [5690,5621,4556,4090,3113,20909,1699,176,7465,2600,\n",
    "                4708,5390,2137,1100,3337,4417,538,1200,19135,1515,\n",
    "                1700,330,950,2470],\n",
    "    \"Area_km2\" : [\n",
    "    1572, 219.3, 414.6, 891.8, 213.8,\n",
    "    105.4, 454, 468, 32.61, 51.73,\n",
    "    115, 604.3, 1285, 500, 525.2,\n",
    "    179.8, 41.8, 641, 38.96, 401,\n",
    "    111, 17.3, 1854, 142]\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(data)\n",
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a7e6479c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>EV</th>\n",
       "      <th>Public_EV_Chargers</th>\n",
       "      <th>Cycling_Routes_km</th>\n",
       "      <th>Public_Bike_Companies</th>\n",
       "      <th>Bus_Fare</th>\n",
       "      <th>Airports</th>\n",
       "      <th>Electric_Buses</th>\n",
       "      <th>Overall_Score</th>\n",
       "      <th>Air_Pollution</th>\n",
       "      <th>Density</th>\n",
       "      <th>Area_km2</th>\n",
       "      <th>Cycling_Routes_km_per_area</th>\n",
       "      <th>EV_per_density</th>\n",
       "      <th>Public_EV_Chargers_per_density</th>\n",
       "      <th>Public_Bike_Companies_per_density</th>\n",
       "      <th>Electric_Buses_per_density</th>\n",
       "      <th>Airports_per_density</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>London</td>\n",
       "      <td>80000</td>\n",
       "      <td>11557</td>\n",
       "      <td>97</td>\n",
       "      <td>3</td>\n",
       "      <td>2.08</td>\n",
       "      <td>6</td>\n",
       "      <td>1397</td>\n",
       "      <td>5.87</td>\n",
       "      <td>8.4</td>\n",
       "      <td>5690</td>\n",
       "      <td>1572.00</td>\n",
       "      <td>0.061705</td>\n",
       "      <td>14.059754</td>\n",
       "      <td>2.031107</td>\n",
       "      <td>0.000527</td>\n",
       "      <td>0.245518</td>\n",
       "      <td>0.001054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Amsterdam</td>\n",
       "      <td>15000</td>\n",
       "      <td>13549</td>\n",
       "      <td>858</td>\n",
       "      <td>5</td>\n",
       "      <td>3.40</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>5.71</td>\n",
       "      <td>9.1</td>\n",
       "      <td>5621</td>\n",
       "      <td>219.30</td>\n",
       "      <td>3.912449</td>\n",
       "      <td>2.668564</td>\n",
       "      <td>2.410425</td>\n",
       "      <td>0.000890</td>\n",
       "      <td>0.013343</td>\n",
       "      <td>0.000178</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Vienna</td>\n",
       "      <td>18000</td>\n",
       "      <td>1374</td>\n",
       "      <td>1300</td>\n",
       "      <td>6</td>\n",
       "      <td>2.40</td>\n",
       "      <td>1</td>\n",
       "      <td>150</td>\n",
       "      <td>5.70</td>\n",
       "      <td>9.1</td>\n",
       "      <td>4556</td>\n",
       "      <td>414.60</td>\n",
       "      <td>3.135552</td>\n",
       "      <td>3.950834</td>\n",
       "      <td>0.301580</td>\n",
       "      <td>0.001317</td>\n",
       "      <td>0.032924</td>\n",
       "      <td>0.000219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Berlin</td>\n",
       "      <td>30000</td>\n",
       "      <td>3838</td>\n",
       "      <td>1000</td>\n",
       "      <td>6</td>\n",
       "      <td>3.20</td>\n",
       "      <td>1</td>\n",
       "      <td>230</td>\n",
       "      <td>5.52</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4090</td>\n",
       "      <td>891.80</td>\n",
       "      <td>1.121328</td>\n",
       "      <td>7.334963</td>\n",
       "      <td>0.938386</td>\n",
       "      <td>0.001467</td>\n",
       "      <td>0.056235</td>\n",
       "      <td>0.000244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Helsinki</td>\n",
       "      <td>25100</td>\n",
       "      <td>146</td>\n",
       "      <td>1300</td>\n",
       "      <td>3</td>\n",
       "      <td>2.95</td>\n",
       "      <td>1</td>\n",
       "      <td>428</td>\n",
       "      <td>5.36</td>\n",
       "      <td>4.9</td>\n",
       "      <td>3113</td>\n",
       "      <td>213.80</td>\n",
       "      <td>6.080449</td>\n",
       "      <td>8.062962</td>\n",
       "      <td>0.046900</td>\n",
       "      <td>0.000964</td>\n",
       "      <td>0.137488</td>\n",
       "      <td>0.000321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Paris</td>\n",
       "      <td>20000</td>\n",
       "      <td>1043</td>\n",
       "      <td>1000</td>\n",
       "      <td>6</td>\n",
       "      <td>2.50</td>\n",
       "      <td>3</td>\n",
       "      <td>500</td>\n",
       "      <td>5.25</td>\n",
       "      <td>10.3</td>\n",
       "      <td>20909</td>\n",
       "      <td>105.40</td>\n",
       "      <td>9.487666</td>\n",
       "      <td>0.956526</td>\n",
       "      <td>0.049883</td>\n",
       "      <td>0.000287</td>\n",
       "      <td>0.023913</td>\n",
       "      <td>0.000143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Oslo</td>\n",
       "      <td>95466</td>\n",
       "      <td>535</td>\n",
       "      <td>327</td>\n",
       "      <td>4</td>\n",
       "      <td>3.24</td>\n",
       "      <td>1</td>\n",
       "      <td>183</td>\n",
       "      <td>5.20</td>\n",
       "      <td>6.2</td>\n",
       "      <td>1699</td>\n",
       "      <td>454.00</td>\n",
       "      <td>0.720264</td>\n",
       "      <td>56.189523</td>\n",
       "      <td>0.314891</td>\n",
       "      <td>0.002354</td>\n",
       "      <td>0.107710</td>\n",
       "      <td>0.000589</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>100</td>\n",
       "      <td>28</td>\n",
       "      <td>350</td>\n",
       "      <td>5</td>\n",
       "      <td>1.30</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>4.97</td>\n",
       "      <td>5.5</td>\n",
       "      <td>176</td>\n",
       "      <td>468.00</td>\n",
       "      <td>0.747863</td>\n",
       "      <td>0.568182</td>\n",
       "      <td>0.159091</td>\n",
       "      <td>0.028409</td>\n",
       "      <td>0.056818</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Brussels</td>\n",
       "      <td>14000</td>\n",
       "      <td>620</td>\n",
       "      <td>650</td>\n",
       "      <td>7</td>\n",
       "      <td>2.40</td>\n",
       "      <td>2</td>\n",
       "      <td>75</td>\n",
       "      <td>4.93</td>\n",
       "      <td>9.8</td>\n",
       "      <td>7465</td>\n",
       "      <td>32.61</td>\n",
       "      <td>19.932536</td>\n",
       "      <td>1.875419</td>\n",
       "      <td>0.083054</td>\n",
       "      <td>0.000938</td>\n",
       "      <td>0.010047</td>\n",
       "      <td>0.000268</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Luxembourg</td>\n",
       "      <td>10000</td>\n",
       "      <td>527</td>\n",
       "      <td>78</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4.61</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2600</td>\n",
       "      <td>51.73</td>\n",
       "      <td>1.507829</td>\n",
       "      <td>3.846154</td>\n",
       "      <td>0.202692</td>\n",
       "      <td>0.001154</td>\n",
       "      <td>0.011538</td>\n",
       "      <td>0.000385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Dublin</td>\n",
       "      <td>20000</td>\n",
       "      <td>141</td>\n",
       "      <td>190</td>\n",
       "      <td>4</td>\n",
       "      <td>1.70</td>\n",
       "      <td>1</td>\n",
       "      <td>100</td>\n",
       "      <td>4.60</td>\n",
       "      <td>6.3</td>\n",
       "      <td>4708</td>\n",
       "      <td>115.00</td>\n",
       "      <td>1.652174</td>\n",
       "      <td>4.248088</td>\n",
       "      <td>0.029949</td>\n",
       "      <td>0.000850</td>\n",
       "      <td>0.021240</td>\n",
       "      <td>0.000212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Madrid</td>\n",
       "      <td>30000</td>\n",
       "      <td>1776</td>\n",
       "      <td>300</td>\n",
       "      <td>1</td>\n",
       "      <td>1.50</td>\n",
       "      <td>1</td>\n",
       "      <td>150</td>\n",
       "      <td>4.36</td>\n",
       "      <td>9.0</td>\n",
       "      <td>5390</td>\n",
       "      <td>604.30</td>\n",
       "      <td>0.496442</td>\n",
       "      <td>5.565863</td>\n",
       "      <td>0.329499</td>\n",
       "      <td>0.000186</td>\n",
       "      <td>0.027829</td>\n",
       "      <td>0.000186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Rome</td>\n",
       "      <td>10000</td>\n",
       "      <td>842</td>\n",
       "      <td>320</td>\n",
       "      <td>3</td>\n",
       "      <td>1.50</td>\n",
       "      <td>2</td>\n",
       "      <td>400</td>\n",
       "      <td>4.26</td>\n",
       "      <td>13.1</td>\n",
       "      <td>2137</td>\n",
       "      <td>1285.00</td>\n",
       "      <td>0.249027</td>\n",
       "      <td>4.679457</td>\n",
       "      <td>0.394010</td>\n",
       "      <td>0.001404</td>\n",
       "      <td>0.187178</td>\n",
       "      <td>0.000936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Sofia</td>\n",
       "      <td>3000</td>\n",
       "      <td>64</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1</td>\n",
       "      <td>50</td>\n",
       "      <td>4.18</td>\n",
       "      <td>12.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>500.00</td>\n",
       "      <td>0.140000</td>\n",
       "      <td>2.727273</td>\n",
       "      <td>0.058182</td>\n",
       "      <td>0.002727</td>\n",
       "      <td>0.045455</td>\n",
       "      <td>0.000909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Budapest</td>\n",
       "      <td>10000</td>\n",
       "      <td>669</td>\n",
       "      <td>200</td>\n",
       "      <td>2</td>\n",
       "      <td>0.90</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>4.12</td>\n",
       "      <td>11.7</td>\n",
       "      <td>3337</td>\n",
       "      <td>525.20</td>\n",
       "      <td>0.380807</td>\n",
       "      <td>2.996704</td>\n",
       "      <td>0.200479</td>\n",
       "      <td>0.000599</td>\n",
       "      <td>0.011987</td>\n",
       "      <td>0.000300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Copenhagen</td>\n",
       "      <td>10000</td>\n",
       "      <td>838</td>\n",
       "      <td>400</td>\n",
       "      <td>4</td>\n",
       "      <td>3.22</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>4.09</td>\n",
       "      <td>7.9</td>\n",
       "      <td>4417</td>\n",
       "      <td>179.80</td>\n",
       "      <td>2.224694</td>\n",
       "      <td>2.263980</td>\n",
       "      <td>0.189722</td>\n",
       "      <td>0.000906</td>\n",
       "      <td>0.009056</td>\n",
       "      <td>0.000226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Tirana</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>50</td>\n",
       "      <td>4</td>\n",
       "      <td>0.40</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>4.09</td>\n",
       "      <td>16.7</td>\n",
       "      <td>538</td>\n",
       "      <td>41.80</td>\n",
       "      <td>1.196172</td>\n",
       "      <td>0.185874</td>\n",
       "      <td>0.009294</td>\n",
       "      <td>0.007435</td>\n",
       "      <td>0.018587</td>\n",
       "      <td>0.001859</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Zagreb</td>\n",
       "      <td>2000</td>\n",
       "      <td>203</td>\n",
       "      <td>220</td>\n",
       "      <td>2</td>\n",
       "      <td>0.93</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>3.83</td>\n",
       "      <td>14.9</td>\n",
       "      <td>1200</td>\n",
       "      <td>641.00</td>\n",
       "      <td>0.343214</td>\n",
       "      <td>1.666667</td>\n",
       "      <td>0.169167</td>\n",
       "      <td>0.001667</td>\n",
       "      <td>0.025000</td>\n",
       "      <td>0.000833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Athens</td>\n",
       "      <td>2500</td>\n",
       "      <td>63</td>\n",
       "      <td>50</td>\n",
       "      <td>3</td>\n",
       "      <td>1.40</td>\n",
       "      <td>1</td>\n",
       "      <td>250</td>\n",
       "      <td>3.80</td>\n",
       "      <td>16.7</td>\n",
       "      <td>19135</td>\n",
       "      <td>38.96</td>\n",
       "      <td>1.283368</td>\n",
       "      <td>0.130651</td>\n",
       "      <td>0.003292</td>\n",
       "      <td>0.000157</td>\n",
       "      <td>0.013065</td>\n",
       "      <td>0.000052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Vilnius</td>\n",
       "      <td>2000</td>\n",
       "      <td>31</td>\n",
       "      <td>120</td>\n",
       "      <td>1</td>\n",
       "      <td>0.90</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>3.76</td>\n",
       "      <td>10.6</td>\n",
       "      <td>1515</td>\n",
       "      <td>401.00</td>\n",
       "      <td>0.299252</td>\n",
       "      <td>1.320132</td>\n",
       "      <td>0.020462</td>\n",
       "      <td>0.000660</td>\n",
       "      <td>0.019802</td>\n",
       "      <td>0.000660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Nicosia</td>\n",
       "      <td>500</td>\n",
       "      <td>23</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>1.50</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>3.64</td>\n",
       "      <td>14.1</td>\n",
       "      <td>1700</td>\n",
       "      <td>111.00</td>\n",
       "      <td>0.180180</td>\n",
       "      <td>0.294118</td>\n",
       "      <td>0.013529</td>\n",
       "      <td>0.001176</td>\n",
       "      <td>0.005882</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Vaduz</td>\n",
       "      <td>300</td>\n",
       "      <td>17</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>3.19</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>3.28</td>\n",
       "      <td>7.2</td>\n",
       "      <td>330</td>\n",
       "      <td>17.30</td>\n",
       "      <td>5.202312</td>\n",
       "      <td>0.909091</td>\n",
       "      <td>0.051515</td>\n",
       "      <td>0.003030</td>\n",
       "      <td>0.015152</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Skopje</td>\n",
       "      <td>500</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0.60</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>3.07</td>\n",
       "      <td>24.6</td>\n",
       "      <td>950</td>\n",
       "      <td>1854.00</td>\n",
       "      <td>0.010787</td>\n",
       "      <td>0.526316</td>\n",
       "      <td>0.014737</td>\n",
       "      <td>0.001053</td>\n",
       "      <td>0.010526</td>\n",
       "      <td>0.001053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Sarajevo</td>\n",
       "      <td>100</td>\n",
       "      <td>31</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0.80</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>2.80</td>\n",
       "      <td>28.6</td>\n",
       "      <td>2470</td>\n",
       "      <td>142.00</td>\n",
       "      <td>0.105634</td>\n",
       "      <td>0.040486</td>\n",
       "      <td>0.012551</td>\n",
       "      <td>0.000405</td>\n",
       "      <td>0.004049</td>\n",
       "      <td>0.000405</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          City     EV  Public_EV_Chargers  Cycling_Routes_km  \\\n",
       "0       London  80000               11557                 97   \n",
       "1    Amsterdam  15000               13549                858   \n",
       "2       Vienna  18000                1374               1300   \n",
       "3       Berlin  30000                3838               1000   \n",
       "4     Helsinki  25100                 146               1300   \n",
       "5        Paris  20000                1043               1000   \n",
       "6         Oslo  95466                 535                327   \n",
       "7      Andorra    100                  28                350   \n",
       "8     Brussels  14000                 620                650   \n",
       "9   Luxembourg  10000                 527                 78   \n",
       "10      Dublin  20000                 141                190   \n",
       "11      Madrid  30000                1776                300   \n",
       "12        Rome  10000                 842                320   \n",
       "13       Sofia   3000                  64                 70   \n",
       "14    Budapest  10000                 669                200   \n",
       "15  Copenhagen  10000                 838                400   \n",
       "16      Tirana    100                   5                 50   \n",
       "17      Zagreb   2000                 203                220   \n",
       "18      Athens   2500                  63                 50   \n",
       "19     Vilnius   2000                  31                120   \n",
       "20     Nicosia    500                  23                 20   \n",
       "21       Vaduz    300                  17                 90   \n",
       "22      Skopje    500                  14                 20   \n",
       "23    Sarajevo    100                  31                 15   \n",
       "\n",
       "    Public_Bike_Companies  Bus_Fare  Airports  Electric_Buses  Overall_Score  \\\n",
       "0                       3      2.08         6            1397           5.87   \n",
       "1                       5      3.40         1              75           5.71   \n",
       "2                       6      2.40         1             150           5.70   \n",
       "3                       6      3.20         1             230           5.52   \n",
       "4                       3      2.95         1             428           5.36   \n",
       "5                       6      2.50         3             500           5.25   \n",
       "6                       4      3.24         1             183           5.20   \n",
       "7                       5      1.30         0              10           4.97   \n",
       "8                       7      2.40         2              75           4.93   \n",
       "9                       3      0.00         1              30           4.61   \n",
       "10                      4      1.70         1             100           4.60   \n",
       "11                      1      1.50         1             150           4.36   \n",
       "12                      3      1.50         2             400           4.26   \n",
       "13                      3      0.50         1              50           4.18   \n",
       "14                      2      0.90         1              40           4.12   \n",
       "15                      4      3.22         1              40           4.09   \n",
       "16                      4      0.40         1              10           4.09   \n",
       "17                      2      0.93         1              30           3.83   \n",
       "18                      3      1.40         1             250           3.80   \n",
       "19                      1      0.90         1              30           3.76   \n",
       "20                      2      1.50         0              10           3.64   \n",
       "21                      1      3.19         0               5           3.28   \n",
       "22                      1      0.60         1              10           3.07   \n",
       "23                      1      0.80         1              10           2.80   \n",
       "\n",
       "    Air_Pollution  Density  Area_km2  Cycling_Routes_km_per_area  \\\n",
       "0             8.4     5690   1572.00                    0.061705   \n",
       "1             9.1     5621    219.30                    3.912449   \n",
       "2             9.1     4556    414.60                    3.135552   \n",
       "3            10.5     4090    891.80                    1.121328   \n",
       "4             4.9     3113    213.80                    6.080449   \n",
       "5            10.3    20909    105.40                    9.487666   \n",
       "6             6.2     1699    454.00                    0.720264   \n",
       "7             5.5      176    468.00                    0.747863   \n",
       "8             9.8     7465     32.61                   19.932536   \n",
       "9             8.8     2600     51.73                    1.507829   \n",
       "10            6.3     4708    115.00                    1.652174   \n",
       "11            9.0     5390    604.30                    0.496442   \n",
       "12           13.1     2137   1285.00                    0.249027   \n",
       "13           12.0     1100    500.00                    0.140000   \n",
       "14           11.7     3337    525.20                    0.380807   \n",
       "15            7.9     4417    179.80                    2.224694   \n",
       "16           16.7      538     41.80                    1.196172   \n",
       "17           14.9     1200    641.00                    0.343214   \n",
       "18           16.7    19135     38.96                    1.283368   \n",
       "19           10.6     1515    401.00                    0.299252   \n",
       "20           14.1     1700    111.00                    0.180180   \n",
       "21            7.2      330     17.30                    5.202312   \n",
       "22           24.6      950   1854.00                    0.010787   \n",
       "23           28.6     2470    142.00                    0.105634   \n",
       "\n",
       "    EV_per_density  Public_EV_Chargers_per_density  \\\n",
       "0        14.059754                        2.031107   \n",
       "1         2.668564                        2.410425   \n",
       "2         3.950834                        0.301580   \n",
       "3         7.334963                        0.938386   \n",
       "4         8.062962                        0.046900   \n",
       "5         0.956526                        0.049883   \n",
       "6        56.189523                        0.314891   \n",
       "7         0.568182                        0.159091   \n",
       "8         1.875419                        0.083054   \n",
       "9         3.846154                        0.202692   \n",
       "10        4.248088                        0.029949   \n",
       "11        5.565863                        0.329499   \n",
       "12        4.679457                        0.394010   \n",
       "13        2.727273                        0.058182   \n",
       "14        2.996704                        0.200479   \n",
       "15        2.263980                        0.189722   \n",
       "16        0.185874                        0.009294   \n",
       "17        1.666667                        0.169167   \n",
       "18        0.130651                        0.003292   \n",
       "19        1.320132                        0.020462   \n",
       "20        0.294118                        0.013529   \n",
       "21        0.909091                        0.051515   \n",
       "22        0.526316                        0.014737   \n",
       "23        0.040486                        0.012551   \n",
       "\n",
       "    Public_Bike_Companies_per_density  Electric_Buses_per_density  \\\n",
       "0                            0.000527                    0.245518   \n",
       "1                            0.000890                    0.013343   \n",
       "2                            0.001317                    0.032924   \n",
       "3                            0.001467                    0.056235   \n",
       "4                            0.000964                    0.137488   \n",
       "5                            0.000287                    0.023913   \n",
       "6                            0.002354                    0.107710   \n",
       "7                            0.028409                    0.056818   \n",
       "8                            0.000938                    0.010047   \n",
       "9                            0.001154                    0.011538   \n",
       "10                           0.000850                    0.021240   \n",
       "11                           0.000186                    0.027829   \n",
       "12                           0.001404                    0.187178   \n",
       "13                           0.002727                    0.045455   \n",
       "14                           0.000599                    0.011987   \n",
       "15                           0.000906                    0.009056   \n",
       "16                           0.007435                    0.018587   \n",
       "17                           0.001667                    0.025000   \n",
       "18                           0.000157                    0.013065   \n",
       "19                           0.000660                    0.019802   \n",
       "20                           0.001176                    0.005882   \n",
       "21                           0.003030                    0.015152   \n",
       "22                           0.001053                    0.010526   \n",
       "23                           0.000405                    0.004049   \n",
       "\n",
       "    Airports_per_density  \n",
       "0               0.001054  \n",
       "1               0.000178  \n",
       "2               0.000219  \n",
       "3               0.000244  \n",
       "4               0.000321  \n",
       "5               0.000143  \n",
       "6               0.000589  \n",
       "7               0.000000  \n",
       "8               0.000268  \n",
       "9               0.000385  \n",
       "10              0.000212  \n",
       "11              0.000186  \n",
       "12              0.000936  \n",
       "13              0.000909  \n",
       "14              0.000300  \n",
       "15              0.000226  \n",
       "16              0.001859  \n",
       "17              0.000833  \n",
       "18              0.000052  \n",
       "19              0.000660  \n",
       "20              0.000000  \n",
       "21              0.000000  \n",
       "22              0.001053  \n",
       "23              0.000405  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transport_cols = [\n",
    "    \"EV\",\n",
    "    \"Public_EV_Chargers\",\n",
    "    \"Public_Bike_Companies\",\n",
    "    \"Electric_Buses\",\n",
    "    \"Airports\"\n",
    "]\n",
    "\n",
    "df[\"Cycling_Routes_km_per_area\"] = df[\"Cycling_Routes_km\"] / df[\"Area_km2\"]\n",
    "\n",
    "for col in transport_cols:\n",
    "    df[f\"{col}_per_density\"] = df[col] / df[\"Density\"]\n",
    "\n",
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "dfe90924",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shapiro–Wilk: Statistic=0.8416, p-value=0.0015\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import shapiro\n",
    "\n",
    "stat, p = shapiro(df[\"Air_Pollution\"])\n",
    "print(f\"Shapiro–Wilk: Statistic={stat:.4f}, p-value={p:.4f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ee0a6e0e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EV_per_density: rho=-0.59, p-value=0.0026\n",
      "Public_EV_Chargers_per_density: rho=-0.42, p-value=0.0398\n",
      "Cycling_Routes_km_per_area: rho=-0.51, p-value=0.0118\n",
      "Public_Bike_Companies_per_density: rho=-0.12, p-value=0.5777\n",
      "Electric_Buses_per_density: rho=-0.42, p-value=0.0430\n",
      "Airports_per_density: rho=0.34, p-value=0.1031\n",
      "Bus_Fare: rho=-0.57, p-value=0.0035\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import spearmanr\n",
    "\n",
    "for var in [\"EV_per_density\",\n",
    "    \"Public_EV_Chargers_per_density\",\n",
    "    \"Cycling_Routes_km_per_area\",\n",
    "    \"Public_Bike_Companies_per_density\",\n",
    "    \"Electric_Buses_per_density\",\n",
    "    \"Airports_per_density\",\n",
    "    \"Bus_Fare\"]:\n",
    "    rho, pval = spearmanr(df[var], df[\"Air_Pollution\"])\n",
    "    print(f\"{var}: rho={rho:.2f}, p-value={pval:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b09bffda",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mann–Whitney U (one-sided: High < Low): U=40.00, p-value=0.0344\n",
      "The High EV_per_density group has significantly lower pollution than the Low group (p < 0.05).\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import mannwhitneyu\n",
    "\n",
    "median_ev_norm = df[\"EV_per_density\"].median()\n",
    "\n",
    "low  = df[df[\"EV_per_density\"] <= median_ev_norm][\"Air_Pollution\"]\n",
    "high = df[df[\"EV_per_density\"] >  median_ev_norm][\"Air_Pollution\"]\n",
    "\n",
    "u_one, pval_one = mannwhitneyu(high, low, alternative='less')\n",
    "print(f\"Mann–Whitney U (one-sided: High < Low): U={u_one:.2f}, p-value={pval_one:.4f}\")\n",
    "if pval_one < 0.05:\n",
    "    print(\"The High EV_per_density group has significantly lower pollution than the Low group (p < 0.05).\")\n",
    "else:\n",
    "    print(\"No evidence that the High EV_per_density group has lower pollution than the Low group (p ≥ 0.05).\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a4722d18",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Kruskal–Wallis: H=8.30, p-value=0.0157\n",
      " There is a significant difference in pollution levels among the three cycling tertiles (p < 0.05).\n",
      "\n",
      "Med vs Low (one-sided): U=17.00, p-value=0.0638\n",
      " No significant evidence that pollution in the Med group is lower than in the Low group (p ≥ 0.05).\n",
      "\n",
      "High vs Low (one-sided): U=4.00, p-value=0.0019\n",
      " The High group has significantly lower pollution than the Low group (p < 0.05).\n",
      "\n",
      "High vs Med (one-sided): U=22.00, p-value=0.1589\n",
      " No significant evidence that pollution in the High group is lower than in the Med group (p ≥ 0.05).\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import kruskal\n",
    "\n",
    "df[\"cycling_tertile\"] = pd.qcut(df[\"Cycling_Routes_km_per_area\"], 3, labels=[\"Low\",\"Med\",\"High\"])\n",
    "\n",
    "low  = df[df[\"cycling_tertile\"] == \"Low\"][\"Air_Pollution\"]\n",
    "med  = df[df[\"cycling_tertile\"] == \"Med\"][\"Air_Pollution\"]\n",
    "high = df[df[\"cycling_tertile\"] == \"High\"][\"Air_Pollution\"]\n",
    "\n",
    "\n",
    "h_stat, pval_kw = kruskal(low, med, high)\n",
    "u_lm, p_lm = mannwhitneyu(med, low, alternative='less')\n",
    "u_lh, p_lh = mannwhitneyu(high, low, alternative='less')\n",
    "u_mh, p_mh = mannwhitneyu(high, med, alternative='less')\n",
    "\n",
    "print(f\"Kruskal–Wallis: H={h_stat:.2f}, p-value={pval_kw:.4f}\")\n",
    "if pval_kw < 0.05:\n",
    "    print(\" There is a significant difference in pollution levels among the three cycling tertiles (p < 0.05).\")\n",
    "else:\n",
    "    print(\" No significant difference in pollution levels among the three cycling tertiles (p ≥ 0.05).\")\n",
    "\n",
    "print()\n",
    "print(f\"Med vs Low (one-sided): U={u_lm:.2f}, p-value={p_lm:.4f}\")\n",
    "if p_lm < 0.05:\n",
    "    print(\" The Med group has significantly lower pollution than the Low group (p < 0.05).\")\n",
    "else:\n",
    "    print(\" No significant evidence that pollution in the Med group is lower than in the Low group (p ≥ 0.05).\")\n",
    "\n",
    "print()\n",
    "print(f\"High vs Low (one-sided): U={u_lh:.2f}, p-value={p_lh:.4f}\")\n",
    "if p_lh < 0.05:\n",
    "    print(\" The High group has significantly lower pollution than the Low group (p < 0.05).\")\n",
    "else:\n",
    "    print(\" No significant evidence that pollution in the High group is lower than in the Low group (p ≥ 0.05).\")\n",
    "\n",
    "print()\n",
    "print(f\"High vs Med (one-sided): U={u_mh:.2f}, p-value={p_mh:.4f}\")\n",
    "if p_mh < 0.05:\n",
    "    print(\" The High group has significantly lower pollution than the Med group (p < 0.05).\")\n",
    "else:\n",
    "    print(\" No significant evidence that pollution in the High group is lower than in the Med group (p ≥ 0.05).\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "52426a65",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Observed diff (High–Low) = -4.63\n",
      "p-value (one-sided: High < Low) = 0.0223\n",
      "H1: The pollution level in the High Electric_Buses_per_density group is significantly lower (p < 0.05).\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "B = 10000\n",
    "\n",
    "median_buses_norm = df[\"Electric_Buses_per_density\"].median()\n",
    "low_buses_norm  = df[df[\"Electric_Buses_per_density\"] <= median_buses_norm][\"Air_Pollution\"].values\n",
    "high_buses_norm = df[df[\"Electric_Buses_per_density\"] >  median_buses_norm][\"Air_Pollution\"].values\n",
    "\n",
    "av_low_norm  = np.mean(low_buses_norm)\n",
    "av_high_norm = np.mean(high_buses_norm)\n",
    "diff_obs_norm = av_high_norm - av_low_norm\n",
    "\n",
    "all_vals = np.concatenate([low_buses_norm, high_buses_norm])\n",
    "n_low  = len(low_buses_norm)\n",
    "n_high = len(high_buses_norm)\n",
    "\n",
    "y = np.empty(B)\n",
    "for i in range(B):\n",
    "    rd_high = np.random.choice(all_vals, size=n_high, replace=True)\n",
    "    rd_low  = np.random.choice(all_vals, size=n_low,  replace=True)\n",
    "    y[i] = np.mean(rd_high) - np.mean(rd_low)\n",
    "\n",
    "p_value_norm = np.sum(y < diff_obs_norm) / B\n",
    "\n",
    "print(f\"Observed diff (High–Low) = {diff_obs_norm:.2f}\")\n",
    "print(f\"p-value (one-sided: High < Low) = {p_value_norm:.4f}\")\n",
    "\n",
    "if p_value_norm < 0.05:\n",
    "    print(\"H1: The pollution level in the High Electric_Buses_per_density group is significantly lower (p < 0.05).\")\n",
    "else:\n",
    "    print(\"H0: There is no significant evidence that the pollution level in the High Electric_Buses_per_density group is lower.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "23526438",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature importances (normalized transport data):\n",
      "Public_EV_Chargers_per_density       0.403656\n",
      "Cycling_Routes_km_per_area           0.270862\n",
      "EV_per_density                       0.255605\n",
      "Electric_Buses_per_density           0.035176\n",
      "Public_Bike_Companies_per_density    0.024521\n",
      "Airports_per_density                 0.007524\n",
      "Bus_Fare                             0.002656\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingRegressor\n",
    "\n",
    "norm_features = [\n",
    "    \"EV_per_density\",\n",
    "    \"Public_EV_Chargers_per_density\",\n",
    "    \"Cycling_Routes_km_per_area\",\n",
    "    \"Public_Bike_Companies_per_density\",\n",
    "    \"Electric_Buses_per_density\",\n",
    "    \"Airports_per_density\",\n",
    "    \"Bus_Fare\"\n",
    "]\n",
    "\n",
    "X_norm = df[norm_features]\n",
    "y = df[\"Air_Pollution\"]\n",
    "\n",
    "model_norm = GradientBoostingRegressor(random_state=42)\n",
    "model_norm.fit(X_norm, y)\n",
    "\n",
    "importances_norm = pd.Series(\n",
    "    model_norm.feature_importances_, \n",
    "    index=norm_features\n",
    ").sort_values(ascending=False)\n",
    "\n",
    "print(\"Feature importances (normalized transport data):\")\n",
    "print(importances_norm)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
